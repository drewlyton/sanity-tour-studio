{"version":3,"file":"index.esm.js","sources":["../src/useLocation.tsx","../src/CustomLayout.tsx","../src/OnboardingTool.tsx","../src/index.ts"],"sourcesContent":["import {useEffect, useState} from 'react'\n\nconst useLocation = () => {\n  const [currentURL, setCurrentURL] = useState(window.location.pathname)\n\n  useEffect(() => {\n    const handleURLChange = (event: any) => {\n      const url = new URL(event.destination.url)\n\n      setCurrentURL(url.pathname)\n    }\n\n    // Listen for 'popstate' event, which is triggered when the URL changes\n    navigation.addEventListener('navigate', handleURLChange)\n\n    return () => {\n      // Clean up by removing the event listener when component unmounts\n      navigation.removeEventListener('navigate', handleURLChange)\n    }\n  }, []) // Empty dependency array means this effect will run only once on mount\n\n  return currentURL\n}\n\nexport default useLocation\n","import {HomeIcon} from '@sanity/icons'\nimport {Box, Button, Card, Flex, Text} from '@sanity/ui'\nimport {Provider, atom, useAtom} from 'jotai'\nimport {LayoutProps, NavbarProps} from 'sanity'\nimport useLocation from './useLocation'\n\n/**\n * Usage in `sanity.config.ts` (or .js)\n *\n * ```ts\n * import {defineConfig} from 'sanity'\n * import {myPlugin} from 'sanity-plugin-onboarding'\n *\n * export default defineConfig({\n *   // ...\n *   plugins: [myPlugin()],\n * })\n * ```\n */\n\nconst showPanel = atom(false)\n\nexport function RightSidePanel() {\n  const [state] = useAtom(showPanel)\n  const currentPath = useLocation()\n  console.log({currentPath})\n  const isVision = currentPath === '/vision'\n  if (state)\n    return (\n      <Card padding={[3, 3, 4]} radius={2} shadow={1} tone=\"primary\">\n        <Text size={4} style={{paddingBottom: '3em'}}>\n          Get Started\n        </Text>\n        {isVision ? <Text>Some info about Vision </Text> : <Text>This is a right sidebar. </Text>}\n      </Card>\n    )\n}\n\nexport function CustomLayout(props: LayoutProps) {\n  return (\n    <Provider>\n      <Flex height={'fill'}>\n        <Box flex={1}>{props.renderDefault(props)}</Box>\n        <RightSidePanel />\n      </Flex>\n    </Provider>\n  )\n}\n\nexport function CustomNavBar(props: NavbarProps) {\n  const [state, setState] = useAtom(showPanel)\n\n  const togglePanel = () => {\n    setState(!state)\n  }\n  return (\n    <Flex align=\"center\">\n      <Box flex={1}>{props.renderDefault(props)}</Box>\n      <Card scheme=\"dark\" paddingRight={2}>\n        <Button icon={HomeIcon} onClick={togglePanel} />\n      </Card>\n    </Flex>\n  )\n}\n","import {Card, Grid, Text} from '@sanity/ui'\n\nconst MyCoolComponent = () => {\n  return (\n    <Grid columns={3} gap={4} padding={4}>\n      <Card padding={4} tone=\"positive\">\n        <Text>Update your Schema.</Text>\n      </Card>\n      <Card padding={4} tone=\"critical\">\n        <Text>Query with GROQ.</Text>\n      </Card>\n      <Card padding={4} tone=\"primary\">\n        <Text>Invite a Collaborator.</Text>\n      </Card>\n    </Grid>\n  )\n}\n\nexport const onboardingTool = (config?: any) => ({\n  name: 'onboarding-tool',\n  title: 'Get Started',\n  component: MyCoolComponent,\n  ...config,\n})\n","import {definePlugin} from 'sanity'\nimport {CustomLayout, CustomNavBar} from './CustomLayout'\nimport {onboardingTool} from './OnboardingTool'\n\ninterface MyPluginConfig {\n  /* nothing here yet */\n}\n\nexport const myPlugin = definePlugin<MyPluginConfig | void>((config = {}) => {\n  return {\n    name: 'sanity-plugin-onboarding',\n    tools: [onboardingTool()],\n    studio: {\n      components: {\n        layout: CustomLayout,\n        navbar: CustomNavBar,\n      },\n    },\n  }\n})\n"],"names":[],"mappings":"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"}